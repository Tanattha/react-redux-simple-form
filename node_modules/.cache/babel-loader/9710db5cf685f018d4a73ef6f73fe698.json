{"ast":null,"code":"import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\"; // export const formReducers = (\n//   state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n//   action\n// ) => {\n//   switch (action.type) {\n//     case ADD_TO_LIST:\n//       return { userList: action.payload.userList };\n//     case CLEAR_LIST:\n//       return { userList: action.payload.userList};\n//     default:\n//       return state;\n//   }\n// };\n\nexport var formReducers = (state = {\n  userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\")\n}, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_TO_LIST:\n      {\n        var user = action.payload.user;\n        userList.forEach(el => {\n          if (el.email === user.email) {\n            alreadyExists = true;\n            alert(\"This email is already taken, please change\");\n            return {\n              type: ADD_TO_LIST,\n              payload: {\n                userList\n              }\n            };\n          }\n        });\n        draft.userList.push(user);\n        localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n        return draft;\n      }\n\n    case CLEAR_LIST:\n      {\n        var _userList = action.payload.userList;\n        localStorage.setItem(\"userList\", JSON.stringify(_userList));\n        return draft;\n      }\n\n    default:\n      return draft;\n  }\n});","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/reducers/formReducer.js"],"names":["ADD_TO_LIST","CLEAR_LIST","produce","formReducers","state","userList","JSON","parse","localStorage","getItem","action","draft","type","user","payload","forEach","el","email","alreadyExists","alert","push","setItem","stringify"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,OAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAG,CAC1BC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,IAA/C;AAAZ,CADkB,EAE1BC,MAF0B,KAI1BR,OAAO,CAACE,KAAD,EAASO,KAAD,IAAW;AAExB,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKZ,WAAL;AAAkB;AAAA,YACRa,IADQ,GACCH,MAAM,CAACI,OADR,CACRD,IADQ;AAEhBR,QAAAA,QAAQ,CAACU,OAAT,CAAkBC,EAAD,IAAQ;AACrB,cAAIA,EAAE,CAACC,KAAH,KAAaJ,IAAI,CAACI,KAAtB,EAA6B;AAC3BC,YAAAA,aAAa,GAAG,IAAhB;AACAC,YAAAA,KAAK,CAAC,4CAAD,CAAL;AAEA,mBAAO;AACLP,cAAAA,IAAI,EAAEZ,WADD;AAELc,cAAAA,OAAO,EAAE;AAAET,gBAAAA;AAAF;AAFJ,aAAP;AAID;AACF,SAVH;AAWAM,QAAAA,KAAK,CAACN,QAAN,CAAee,IAAf,CAAoBP,IAApB;AACAL,QAAAA,YAAY,CAACa,OAAb,CAAqB,UAArB,EAAiCf,IAAI,CAACgB,SAAL,CAAeX,KAAK,CAACN,QAArB,CAAjC;AACA,eAAOM,KAAP;AACD;;AAEA,SAAKV,UAAL;AAAiB;AAAA,YACRI,SADQ,GACKK,MAAM,CAACI,OADZ,CACRT,QADQ;AAEfG,QAAAA,YAAY,CAACa,OAAb,CAAqB,UAArB,EAAiCf,IAAI,CAACgB,SAAL,CAAejB,SAAf,CAAjC;AACA,eAAOM,KAAP;AACD;;AACF;AACE,aAAOA,KAAP;AAzBJ;AA2BD,CA7BM,CAJF","sourcesContent":["import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\";\n\n// export const formReducers = (\n//   state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n//   action\n// ) => {\n//   switch (action.type) {\n//     case ADD_TO_LIST:\n//       return { userList: action.payload.userList };\n//     case CLEAR_LIST:\n//       return { userList: action.payload.userList};\n//     default:\n//       return state;\n//   }\n// };\n\nexport const formReducers = (\n  state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n  action\n) =>\n  produce(state, (draft) => {\n   \n    switch (action.type) {\n      case ADD_TO_LIST: {\n        const { user } = action.payload;\n        userList.forEach((el) => {\n            if (el.email === user.email) {\n              alreadyExists = true;\n              alert(\"This email is already taken, please change\");\n              \n              return {\n                type: ADD_TO_LIST,\n                payload: { userList }\n              };\n            }\n          });\n        draft.userList.push(user);\n        localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n        return draft;\n      }\n\n       case CLEAR_LIST: {\n        const { userList } = action.payload;\n         localStorage.setItem(\"userList\", JSON.stringify(userList));\n         return draft;\n       }\n      default:\n        return draft;\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}