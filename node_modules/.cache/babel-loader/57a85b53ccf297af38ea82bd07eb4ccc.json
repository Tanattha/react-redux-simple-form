{"ast":null,"code":"import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\"; // export const formReducers = (\n//   state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n//   action\n// ) => {\n//   switch (action.type) {\n//     case ADD_TO_LIST:\n//       return { userList: action.payload.userList };\n//     case CLEAR_LIST:\n//       return { userList: action.payload.userList};\n//     default:\n//       return state;\n//   }\n// };\n\nexport var formReducers = (state = {\n  userList: JSON.parse(localStorage.getItem(\"userList\"))\n}, action) => produce(state, draft => {\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case ADD_TO_LIST:\n      {\n        var user = payload.user; // if (draft.userList.email === payload.email) {\n        //   alert(\"This email is already taken, please change\");\n        // } else {\n\n        draft.userList.push(user);\n        console.log(draft.userList); //localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n\n        return draft;\n      }\n\n    case CLEAR_LIST:\n      {\n        console.log(payload);\n        localStorage.setItem(\"userList\", JSON.stringify(payload));\n        return draft;\n      }\n\n    default:\n      return draft;\n  }\n});","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/reducers/formReducer.js"],"names":["ADD_TO_LIST","CLEAR_LIST","produce","formReducers","state","userList","JSON","parse","localStorage","getItem","action","draft","type","payload","user","push","console","log","setItem","stringify"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,OAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAG,CAC1BC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAAZ,CADkB,EAE1BC,MAF0B,KAI1BR,OAAO,CAACE,KAAD,EAASO,KAAD,IAAW;AAAA,MAChBC,IADgB,GACEF,MADF,CAChBE,IADgB;AAAA,MACVC,OADU,GACEH,MADF,CACVG,OADU;;AAExB,UAAQD,IAAR;AACE,SAAKZ,WAAL;AAAkB;AAAA,YACRc,IADQ,GACCD,OADD,CACRC,IADQ,EAIhB;AACA;AACA;;AACEH,QAAAA,KAAK,CAACN,QAAN,CAAeU,IAAf,CAAoBD,IAApB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACN,QAAlB,EARc,CASd;;AAEF,eAAOM,KAAP;AACD;;AAED,SAAKV,UAAL;AAAiB;AACfe,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAL,QAAAA,YAAY,CAACU,OAAb,CAAqB,UAArB,EAAiCZ,IAAI,CAACa,SAAL,CAAeN,OAAf,CAAjC;AACA,eAAOF,KAAP;AACD;;AACD;AACE,aAAOA,KAAP;AArBJ;AAuBD,CAzBM,CAJF","sourcesContent":["import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\";\n\n// export const formReducers = (\n//   state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n//   action\n// ) => {\n//   switch (action.type) {\n//     case ADD_TO_LIST:\n//       return { userList: action.payload.userList };\n//     case CLEAR_LIST:\n//       return { userList: action.payload.userList};\n//     default:\n//       return state;\n//   }\n// };\n\nexport const formReducers = (\n  state = { userList: JSON.parse(localStorage.getItem(\"userList\")) },\n  action\n) =>\n  produce(state, (draft) => {\n    const { type, payload } = action;\n    switch (type) {\n      case ADD_TO_LIST: {\n        const { user } = payload;\n       \n          \n        // if (draft.userList.email === payload.email) {\n        //   alert(\"This email is already taken, please change\");\n        // } else {\n          draft.userList.push(user);\n          console.log(draft.userList)\n          //localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n        \n        return draft;\n      }\n    \n      case CLEAR_LIST: {\n        console.log(payload)\n        localStorage.setItem(\"userList\", JSON.stringify(payload));\n        return draft;\n      }\n      default:\n        return draft;\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}