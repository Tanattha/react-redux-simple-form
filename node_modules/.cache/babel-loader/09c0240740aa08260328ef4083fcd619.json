{"ast":null,"code":"import _slicedToArray from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Tanattha/Downloads/1psge/src/Components/Excercise/Excercise.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport composeValidators from \"../../composeValidators\";\nimport { useDispatch } from \"react-redux\";\nimport { addToList, clearList } from \"../../actions/formActions\";\nimport store from \"../../store\";\nimport \"./Excercise.css\";\n\nfunction Exercise() {\n  var dispatch = useDispatch();\n  var REGEX_VALID_EMAIL = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n\n  var isValidEmail = value => {\n    if (value && REGEX_VALID_EMAIL) {\n      return value;\n    }\n  };\n\n  var handleSubmit = () => {\n    var user = {\n      name: name,\n      email: email\n    };\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  var handleList = () => {\n    dispatch(clearList);\n  };\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var userList = store.getState().form.userList;\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: \"exercise container\",\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: ({\n      form,\n      handleSubmit\n    }) => {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        class: \"title\",\n        title: \"Form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, \"Please fill out this form.\"), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        value: name,\n        onChange: e => setName(e.target.value),\n        name: \"name\",\n        type: \"text\",\n        id: \"outlined-error-helper-text\",\n        label: \"Name\",\n        placeholder: \"...\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }\n      }), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(TextField, {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        id: \"outlined-error-helper-text\",\n        label: \"Email\",\n        placeholder: \"Required\",\n        variant: \"outlined\",\n        required: true,\n        type: \"email\",\n        validate: composeValidators(isValidEmail),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        disabled: !email,\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, \"Submit\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    class: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    class: \"title\",\n    title: \"Submitted Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    disabled: !userList,\n    variant: \"contained\",\n    onClick: () => handleList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \" Clear List \"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, userList.map((obj, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, \"Full Name: \"), obj.name), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, \"Email: \"), obj.email)))))));\n}\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/Components/Excercise/Excercise.js"],"names":["React","Card","CardHeader","CardContent","CardActions","Grid","Typography","Button","Form","TextField","composeValidators","useDispatch","addToList","clearList","store","Exercise","dispatch","REGEX_VALID_EMAIL","isValidEmail","value","handleSubmit","user","name","email","setName","setEmail","handleList","useState","userList","getState","form","e","target","map","obj","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport composeValidators from \"../../composeValidators\";\nimport { useDispatch } from \"react-redux\";\nimport { addToList,clearList } from \"../../actions/formActions\";\nimport store from \"../../store\";\nimport \"./Excercise.css\";\n\nfunction Exercise() {\n  const dispatch = useDispatch();\n  const REGEX_VALID_EMAIL = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n  const isValidEmail = (value) => {\n    if (value && REGEX_VALID_EMAIL) {\n      return value;\n    }\n  };\n  const handleSubmit = () => {\n    const user = {\n      name: name,\n      email: email,\n    };\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  const handleList = () => {\n    dispatch(clearList);\n  }\n\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const userList = store.getState().form.userList;\n\n  return (\n    <Grid className=\"exercise container\" container spacing={3}>\n      <Grid item xs={6}>\n        <Form\n          onSubmit={handleSubmit}\n          render={({ form, handleSubmit }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <Card>\n                  <CardHeader class='title' title=\"Form\" />\n                  <CardContent>Please fill out this form.</CardContent>\n                  <CardActions>\n                    <div>\n                      <TextField\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        name=\"name\"\n                        type=\"text\"\n                        id=\"outlined-error-helper-text\"\n                        label=\"Name\"\n                        placeholder=\"...\"\n                        variant=\"outlined\"\n                      />\n                      &nbsp;&nbsp;\n                      <TextField\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        id=\"outlined-error-helper-text\"\n                        label=\"Email\"\n                        placeholder=\"Required\"\n                        variant=\"outlined\"\n                        required\n                        type=\"email\"\n                        validate={composeValidators(isValidEmail)}\n                      />\n                    </div>\n                    <Button \n                    color=\"primary\" \n                    disabled={!email} \n                    variant=\"contained\" \n                    type=\"submit\">\n                      Submit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </form>\n            );\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={6}>\n        <Card class='scroll' >\n          <CardHeader class='title' title=\"Submitted Form\" />\n          <Button \n          color=\"secondary\" \n          disabled={!userList} \n          variant=\"contained\" \n          onClick={() => handleList()}> Clear List </Button>\n          <CardContent >\n            {userList.map((obj, index) => (\n              <div key={index}>\n                <br />\n                <Typography>\n                  <strong>Full Name: </strong>{obj.name}\n                </Typography>\n                <Typography>\n                  <strong>Email: </strong>{obj.email}\n                </Typography>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Exercise;\n"]},"metadata":{},"sourceType":"module"}