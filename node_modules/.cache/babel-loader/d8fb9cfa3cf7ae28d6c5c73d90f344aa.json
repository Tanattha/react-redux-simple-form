{"ast":null,"code":"import _slicedToArray from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Tanattha/Downloads/1psge/src/Exercise.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport composeValidators from \"./composeValidators\";\nimport { useDispatch } from \"react-redux\";\nimport { addToList } from \"./actions/formActions\";\nimport store from \"./store\";\n\nfunction Exercise() {\n  var dispatch = useDispatch();\n\n  var handleSubmit = () => {\n    var user = {\n      name: name,\n      email: email\n    };\n\n    if (composeValidators(email)) {\n      console.log(\"YES\");\n    } else {\n      console.log(\"NO\");\n    }\n\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var userList = store.getState().form.userList;\n  console.log(userList);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: ({\n      form,\n      handleSubmit\n    }) => {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        title: \"Form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"outlined-basic\",\n        value: name,\n        label: \"Name\",\n        onChange: e => setName(e.target.value),\n        name: \"name\",\n        type: \"text\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"outlined-basic\",\n        value: email,\n        label: \"Email\",\n        onChange: e => setEmail(e.target.value),\n        name: \"email\",\n        type: \"email\",\n        required: \"true\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Submit\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Submitted Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, userList.map((obj, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, \"Full Name: \", obj.name)), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, \"Email: \", obj.email))))))));\n}\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/Exercise.js"],"names":["React","Card","CardHeader","CardContent","CardActions","Grid","Typography","Button","Form","TextField","composeValidators","useDispatch","addToList","store","Exercise","dispatch","handleSubmit","user","name","email","console","log","setName","setEmail","useState","userList","getState","form","e","target","value","map","obj","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form } from \"react-final-form\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport composeValidators from \"./composeValidators\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToList } from \"./actions/formActions\";\r\nimport store from \"./store\";\r\nfunction Exercise() {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = () => {\r\n    const user = {\r\n      name: name,\r\n      email: email,\r\n    };\r\n    if (composeValidators(email)){\r\n      console.log(\"YES\");\r\n\r\n    }else {\r\n      console.log(\"NO\")\r\n    }\r\n    dispatch(addToList(user));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const userList = store.getState().form.userList;\r\n  console.log(userList);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={6}>\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          render={({ form, handleSubmit }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit} noValidate>\r\n                <Card>\r\n                  <CardHeader title=\"Form\" />\r\n                  <CardContent></CardContent>\r\n                  <CardActions>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      value={name}\r\n                      label=\"Name\"\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      value={email}\r\n                      label=\"Email\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      required=\"true\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button  variant=\"contained\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Card>\r\n          <CardHeader title=\"Submitted Form\" />\r\n          <CardContent>\r\n            {userList.map((obj, index) => (\r\n              <div key={index}>\r\n                <br />\r\n                <Typography>\r\n                  <strong>Full Name: {obj.name}</strong>\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Email: {obj.email}</strong>\r\n                </Typography>\r\n              </div>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Exercise;\r\n"]},"metadata":{},"sourceType":"module"}