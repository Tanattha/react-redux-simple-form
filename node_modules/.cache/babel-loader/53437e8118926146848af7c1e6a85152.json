{"ast":null,"code":"import _slicedToArray from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Tanattha/Downloads/1psge/src/Components/Excercise/Excercise.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Field } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport composeValidators from \"../../composeValidators\";\nimport { useDispatch } from \"react-redux\";\nimport { addToList, clearList } from \"../../actions/formActions\";\nimport store from \"../../store\";\nimport \"./Excercise.css\";\n\nfunction Exercise() {\n  var dispatch = useDispatch(); // //const REGEX_VALID_EMAIL = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // const REGEX_VALID_EMAIL = /^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@â†µ(?:[A-Z0-9-]+\\.)+[A-Z]{2,6}$/;\n  // const validateEmail = (email) => {\n  //   console.log(email);\n  //   // if (email && REGEX_VALID_EMAIL.test(email)) {\n  //   return REGEX_VALID_EMAIL.test(email) ? undefined : \"Not a valid email\";\n  //   //}\n  // };\n\n  var validateEmail = email => {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email) ? undefined : \"Not a valid email\";\n  };\n\n  var handleSubmit = () => {\n    var user = {\n      name: name,\n      email: email\n    };\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      forceUpdate = _React$useState6[1];\n\n  var userList = store.getState().form.userList;\n\n  var handleList = () => {\n    dispatch(clearList());\n    forceUpdate(n => !n);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: \"exercise container\",\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: ({\n      form,\n      handleSubmit\n    }) => {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        class: \"title\",\n        title: \"Form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }, \"Please fill out this form.\"), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        value: name,\n        onChange: e => setName(e.target.value),\n        name: \"name\",\n        type: \"text\",\n        id: \"outlined-error-helper-text\",\n        label: \"Name\",\n        placeholder: \"...\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }\n      }), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Field, {\n        name: \"email\",\n        validate: composeValidators(validateEmail),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }, ({\n        input,\n        meta\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"control\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n          type: \"email\",\n          placeholder: \"you@example.com\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 31\n          }\n        })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"p\", {\n          className: \"help is-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }\n        }, input.name, \" \", meta.error));\n      })), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\" // disabled={!email}\n        ,\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, \"Submit\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    class: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    class: \"title\",\n    title: \"Submitted Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    padding: 10,\n    color: \"secondary\",\n    disabled: userList.length === 0,\n    variant: \"contained\",\n    onClick: handleList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Clear List\"), userList.map((obj, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, \"Full Name: \"), obj.name), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, \"Email: \"), obj.email)))))));\n}\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/Components/Excercise/Excercise.js"],"names":["React","Card","CardHeader","CardContent","CardActions","Grid","Typography","Button","Form","Field","TextField","composeValidators","useDispatch","addToList","clearList","store","Exercise","dispatch","validateEmail","email","re","test","undefined","handleSubmit","user","name","setName","setEmail","useState","forceUpdate","userList","getState","form","handleList","n","e","target","value","input","meta","error","touched","length","map","obj","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Field } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport composeValidators from \"../../composeValidators\";\nimport { useDispatch } from \"react-redux\";\nimport { addToList, clearList } from \"../../actions/formActions\";\nimport store from \"../../store\";\nimport \"./Excercise.css\";\n\nfunction Exercise() {\n  const dispatch = useDispatch();\n\n  // //const REGEX_VALID_EMAIL = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  // const REGEX_VALID_EMAIL = /^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@â†µ(?:[A-Z0-9-]+\\.)+[A-Z]{2,6}$/;\n  // const validateEmail = (email) => {\n  //   console.log(email);\n  //   // if (email && REGEX_VALID_EMAIL.test(email)) {\n  //   return REGEX_VALID_EMAIL.test(email) ? undefined : \"Not a valid email\";\n  //   //}\n  // };\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email) ? undefined : \"Not a valid email\"\n  };\n\n  const handleSubmit = () => {\n    const user = {\n      name: name,\n      email: email,\n    };\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [, forceUpdate] = React.useState(0);\n  const userList = store.getState().form.userList;\n\n  const handleList = () => {\n    dispatch(clearList());\n    forceUpdate((n) => !n);\n  };\n\n  return (\n    <Grid className=\"exercise container\" container spacing={3}>\n      <Grid item xs={6}>\n        <Form\n          onSubmit={handleSubmit}\n          render={({ form, handleSubmit }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <Card>\n                  <CardHeader class=\"title\" title=\"Form\" />\n                  <CardContent>Please fill out this form.</CardContent>\n                  <CardActions>\n                    <div>\n                      <TextField\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        name=\"name\"\n                        type=\"text\"\n                        id=\"outlined-error-helper-text\"\n                        label=\"Name\"\n                        placeholder=\"...\"\n                        variant=\"outlined\"\n                      />\n                      &nbsp;&nbsp;\n                      {/* <TextField\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        id=\"outlined-error-helper-text\"\n                        label=\"Email\"\n                        placeholder=\"Required\"\n                        variant=\"outlined\"\n                        required\n                        // type=\"email\"\n                        validate={composeValidators(validateEmail)}\n                      /> */}\n                      <Field\n                        name=\"email\"\n                        validate={composeValidators( validateEmail)}\n                      >\n                        {({ input, meta }) => {\n                          return (\n                            <div className=\"control\">\n                              <input\n                                {...input}\n                               \n                                type=\"email\"\n                                placeholder=\"you@example.com\"\n                              />\n                              {meta.error && meta.touched && (\n                                <p className=\"help is-danger\">\n                                  {input.name} {meta.error}\n                                </p>\n                              )}\n                            </div>\n                          );\n                        }}\n                      </Field>\n                    </div>\n                    <Button\n                      color=\"primary\"\n                      // disabled={!email}\n                      variant=\"contained\"\n                      type=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </form>\n            );\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={6}>\n        <Card class=\"scroll\">\n          <CardHeader class=\"title\" title=\"Submitted Form\" />\n          <CardContent>\n            <Button\n              padding={10}\n              color=\"secondary\"\n              disabled={userList.length === 0}\n              variant=\"contained\"\n              onClick={handleList}\n            >\n              Clear List\n            </Button>\n            {userList.map((obj, index) => (\n              <div key={index}>\n                <br />\n                <Typography>\n                  <strong>Full Name: </strong>\n                  {obj.name}\n                </Typography>\n                <Typography>\n                  <strong>Email: </strong>\n                  {obj.email}\n                </Typography>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Exercise;\n"]},"metadata":{},"sourceType":"module"}