{"ast":null,"code":"import _slicedToArray from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Tanattha/Downloads/1psge/src/Exercise.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email'; //import composeValidators from \"./composeValidators\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addToList, clearList } from \"./actions/formActions\";\nimport store from \"./store\";\nimport { createValidator, composeValidators, combineValidators, isRequired, isAlphabetic, isNumeric } from 'revalidate';\n\nfunction Exercise() {\n  var dispatch = useDispatch();\n\n  var isValidEmail = () => createValidator(message => value => {\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return message;\n    }\n  }, 'Invalid email address');\n\n  var handleSubmit = () => {\n    var user = {\n      name: name,\n      email: composeValidators(isValidEmail(email))\n    };\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  var removeList = e => {\n    e.preventDefault();\n    var userList = store.getState().form.userList;\n    dispatch(clearList(userList));\n  };\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  var userList = store.getState().form.userList;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: ({\n      form,\n      handleSubmit\n    }) => {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        title: \"Form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, \"test\"), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PersonIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        value: name,\n        onChange: e => setName(e.target.value),\n        name: \"name\",\n        type: \"text\",\n        id: \"outlined-error-helper-text\",\n        label: \"Name\",\n        placeholder: \"...\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(EmailIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        id: \"outlined-error-helper-text\",\n        label: \"Email\",\n        placeholder: \"Required\",\n        variant: \"outlined\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }\n      }), \"error goes here\", error), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, \"Submit\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Submitted Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: removeList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Remove List\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, userList.map((obj, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Full Name: \", obj.name)), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Email: \", obj.email))))))));\n}\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/Exercise.js"],"names":["React","Card","CardHeader","CardContent","CardActions","Grid","Typography","Button","Form","TextField","PersonIcon","EmailIcon","useDispatch","addToList","clearList","store","createValidator","composeValidators","combineValidators","isRequired","isAlphabetic","isNumeric","Exercise","dispatch","isValidEmail","message","value","test","email","handleSubmit","user","name","setName","setEmail","removeList","e","preventDefault","userList","getState","form","useState","error","setError","target","map","obj","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form } from \"react-final-form\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n//import composeValidators from \"./composeValidators\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToList, clearList } from \"./actions/formActions\";\r\nimport store from \"./store\";\r\nimport {\r\n  createValidator,\r\n  composeValidators,\r\n  combineValidators,\r\n  isRequired,\r\n  isAlphabetic,\r\n  isNumeric\r\n} from 'revalidate';\r\nfunction Exercise() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isValidEmail = () => createValidator(\r\n    message => value => {\r\n      if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n        return message\r\n      }\r\n    },\r\n    'Invalid email address'\r\n  )\r\n  const handleSubmit = () => {\r\n    const user = {\r\n      name: name,\r\n      email: composeValidators(\r\n       \r\n        isValidEmail(email)\r\n      )\r\n    }\r\n    dispatch(addToList(user));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  \r\n \r\n  const removeList = (e) => {\r\n    e.preventDefault();\r\n    const userList = store.getState().form.userList;\r\n    dispatch(clearList(userList));\r\n  };\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n  const userList = store.getState().form.userList;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={6}>\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          render={({ form, handleSubmit }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <Card>\r\n                  <CardHeader title=\"Form\" />\r\n                  <CardContent>test</CardContent>\r\n                  <CardActions>\r\n                    <div>\r\n                    <PersonIcon />\r\n                      <TextField\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        id=\"outlined-error-helper-text\"\r\n                        label=\"Name\"\r\n                        placeholder=\"...\"\r\n                        \r\n                        variant=\"outlined\"\r\n                      />\r\n                      <EmailIcon />\r\n                      <TextField\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        id=\"outlined-error-helper-text\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Required\"\r\n                        \r\n                        variant=\"outlined\"\r\n                        required\r\n                        \r\n                      \r\n                      />\r\n                      error goes here\r\n                      {error}\r\n                    </div>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Card>\r\n          <CardHeader title=\"Submitted Form\" />\r\n          <Button variant=\"contained\" onClick={removeList}>\r\n            Remove List\r\n          </Button>\r\n          <CardContent>\r\n            {userList.map((obj, index) => (\r\n              <div key={index}>\r\n                <br />\r\n                <Typography>\r\n                  <strong>Full Name: {obj.name}</strong>\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Email: {obj.email}</strong>\r\n                </Typography>\r\n              </div>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Exercise;\r\n"]},"metadata":{},"sourceType":"module"}