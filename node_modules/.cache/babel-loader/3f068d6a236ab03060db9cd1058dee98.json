{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Tanattha/Downloads/1psge/src/Validation.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { TextField } from \"@material-ui/core\";\nimport { Form, Field } from 'react-final-form'; //const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nvar onSubmit = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function onSubmit(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar required = value => value ? undefined : 'Required';\n\nvar mustBeNumber = value => isNaN(value) ? 'Invalid Email' : undefined;\n\nvar isValidEmail = createValidator(message => value => {\n  if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    return message;\n  }\n}, 'Invalid email address');\n\nvar composeValidators = (...validators) => value => validators.reduce((error, validator) => error || validator(value), undefined);\n\nvar Validation = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Form, {\n  onSubmit: onSubmit,\n  render: ({\n    handleSubmit,\n    form,\n    submitting,\n    pristine,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    type: \"text\",\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 48\n    }\n  }, meta.error))), /*#__PURE__*/React.createElement(Field, {\n    name: \"age\",\n    validate: composeValidators(required, isValidEmail),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 48\n    }\n  }, meta.error))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: form.reset,\n    disabled: submitting || pristine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, JSON.stringify(values, 0, 2))),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}));\n\nexport default Validation;","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/Validation.js"],"names":["React","render","TextField","Form","Field","onSubmit","values","required","value","undefined","mustBeNumber","isNaN","isValidEmail","createValidator","message","test","composeValidators","validators","reduce","error","validator","Validation","handleSubmit","form","submitting","pristine","input","meta","touched","reset","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport { TextField } from \"@material-ui/core\";\nimport { Form, Field } from 'react-final-form'\n\n//const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nconst onSubmit = async values => {\n//   await sleep(300)\n//   window.alert(JSON.stringify(values, 0, 2))\n\n}\n\nconst required = value => (value ? undefined : 'Required')\nconst mustBeNumber = value => (isNaN(value) ? 'Invalid Email' : undefined)\n\nconst isValidEmail = createValidator(\n    message => value => {\n      if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        return message\n      }\n    },\n    'Invalid email address'\n  )\n\nconst composeValidators = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined)\n\n  const Validation = () => (\n\n  <div>\n   \n    <Form\n      onSubmit={onSubmit}\n      render={({ handleSubmit, form, submitting, pristine, values }) => (\n        <form onSubmit={handleSubmit}>\n          <Field name=\"firstName\">\n            {({ input, meta }) => (\n              <div>\n                <label>Full Name</label>\n                <input {...input} type=\"text\" placeholder=\"Full Name\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n         \n          <Field\n            name=\"age\"\n            validate={composeValidators(required, isValidEmail)}\n          >\n            {({ input, meta }) => (\n              <div>\n                <label>Email</label>\n                <input {...input} type=\"email\" placeholder=\"Email\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <div className=\"buttons\">\n            <button type=\"submit\" disabled={submitting}>\n              Submit\n            </button>\n            <button\n              type=\"button\"\n              onClick={form.reset}\n              disabled={submitting || pristine}\n            >\n              Reset\n            </button>\n          </div>\n          <pre>{JSON.stringify(values, 0, 2)}</pre>\n        </form>\n      )}\n    />\n  </div>\n  )\nexport default Validation;\n\n"]},"metadata":{},"sourceType":"module"}