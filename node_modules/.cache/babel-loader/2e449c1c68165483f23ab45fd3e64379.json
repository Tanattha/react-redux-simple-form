{"ast":null,"code":"import _slicedToArray from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Tanattha/Downloads/1psge/src/Exercise.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Field } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport composeValidators from \"./composeValidators\";\nimport { useDispatch } from \"react-redux\";\nimport { addToList, clearList } from \"./actions/formActions\";\nimport store from \"./store\";\nimport { createValidator //composeValidators,\n// combineValidators,\n, isRequired //isAlphabetic,\n//isNumeric\n} from \"revalidate\";\n\nfunction Exercise() {\n  var dispatch = useDispatch();\n  var customIsRequired = isRequired({\n    message: \"Required\"\n  });\n  var isValidEmail = createValidator(message => value => {\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      return message;\n    }\n  }, \"Invalid email address\");\n\n  var handleSubmit = () => {\n    var user = {\n      name: name,\n      email: email\n    };\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  };\n\n  var removeList = e => {\n    e.preventDefault();\n    var userList = store.getState().form.userList;\n    dispatch(clearList(userList));\n  };\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1]; //const [error, setError] = React.useState(\"\");\n\n\n  var userList = store.getState().form.userList;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: ({\n      form,\n      handleSubmit,\n      meta,\n      submitting\n    }) => {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        title: \"Form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }, \"test\"), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PersonIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        value: name,\n        onChange: e => setName(e.target.value),\n        name: \"name\",\n        type: \"text\",\n        id: \"outlined-error-helper-text\",\n        label: \"Name\",\n        placeholder: \"...\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(EmailIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        id: \"outlined-error-helper-text\",\n        label: \"Email\",\n        placeholder: \"Required\",\n        variant: \"outlined\",\n        required: true,\n        validate: composeValidators(isValidEmail),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Field, {\n        name: \"email\",\n        validate: composeValidators(isValidEmail),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }\n      }, ({\n        input,\n        meta\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        type: \"email\",\n        placeholder: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 31\n        }\n      }, meta.error)))), /*#__PURE__*/React.createElement(Button, {\n        disabled: submitting,\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, \"Submit\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Submitted Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: removeList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Remove List\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, userList.map((obj, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"Full Name: \", obj.name)), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"Email: \", obj.email))))))));\n}\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/Exercise.js"],"names":["React","Card","CardHeader","CardContent","CardActions","Grid","Typography","Button","Form","Field","TextField","PersonIcon","EmailIcon","composeValidators","useDispatch","addToList","clearList","store","createValidator","isRequired","Exercise","dispatch","customIsRequired","message","isValidEmail","value","test","handleSubmit","user","name","email","setName","setEmail","removeList","e","preventDefault","userList","getState","form","useState","meta","submitting","target","input","error","touched","map","obj","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form,Field } from \"react-final-form\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport composeValidators from \"./composeValidators\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToList, clearList } from \"./actions/formActions\";\r\nimport store from \"./store\";\r\nimport {\r\n  createValidator,\r\n  //composeValidators,\r\n  // combineValidators,\r\n  isRequired,\r\n  //isAlphabetic,\r\n  //isNumeric\r\n} from \"revalidate\";\r\nfunction Exercise() {\r\n  const dispatch = useDispatch();\r\n\r\n  const customIsRequired = isRequired({ message: \"Required\" });\r\n  const isValidEmail = createValidator(\r\n    (message) => (value) => {\r\n      if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        return message;\r\n      }\r\n    },\r\n    \"Invalid email address\"\r\n  );\r\n  const handleSubmit = () => {\r\n    const user = {\r\n      name: name,\r\n      email: email,\r\n    };\r\n    dispatch(addToList(user));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const removeList = (e) => {\r\n    e.preventDefault();\r\n    const userList = store.getState().form.userList;\r\n    dispatch(clearList(userList));\r\n  };\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  //const [error, setError] = React.useState(\"\");\r\n  const userList = store.getState().form.userList;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={6}>\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          render={({ form, handleSubmit, meta, submitting }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <Card>\r\n                  <CardHeader title=\"Form\" />\r\n                  <CardContent>test</CardContent>\r\n                  <CardActions>\r\n                    <div>\r\n                      <PersonIcon />\r\n                      <TextField\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        id=\"outlined-error-helper-text\"\r\n                        label=\"Name\"\r\n                        placeholder=\"...\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <EmailIcon />\r\n                      <TextField\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        id=\"outlined-error-helper-text\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Required\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        validate={composeValidators(isValidEmail)}\r\n                      />\r\n                     \r\n                      <Field\r\n                        name=\"email\"\r\n                        validate={composeValidators(isValidEmail)}\r\n                      >\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <label>Email</label>\r\n                            <input\r\n                              {...input}\r\n                              type=\"email\"\r\n                              placeholder=\"Email\"\r\n                            />\r\n                            {meta.error && meta.touched && (\r\n                              <span>{meta.error}</span>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </div>\r\n                    <Button\r\n                      disabled={submitting}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Card>\r\n          <CardHeader title=\"Submitted Form\" />\r\n          <Button variant=\"contained\" onClick={removeList}>\r\n            Remove List\r\n          </Button>\r\n          <CardContent>\r\n            {userList.map((obj, index) => (\r\n              <div key={index}>\r\n                <br />\r\n                <Typography>\r\n                  <strong>Full Name: {obj.name}</strong>\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Email: {obj.email}</strong>\r\n                </Typography>\r\n              </div>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Exercise;\r\n"]},"metadata":{},"sourceType":"module"}