{"ast":null,"code":"import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\";\nexport var formReducers = (state = {\n  userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\")\n}, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_TO_LIST:\n      {\n        var user = action.payload.user;\n        var alreadyExists = false;\n        draft.userList.forEach(el => {\n          if (el.email === user.email) {\n            alreadyExists = true;\n            alert(\"This email is already taken, please change\");\n          }\n        });\n\n        if (!alreadyExists) {\n          draft.userList.push(user);\n          localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n        }\n\n        return draft;\n      }\n\n    case CLEAR_LIST:\n      {\n        var newList = action.payload.newList;\n        draft.userList = newList;\n        return draft;\n      }\n\n    default:\n      return draft;\n  }\n});","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/reducers/formReducer.js"],"names":["ADD_TO_LIST","CLEAR_LIST","produce","formReducers","state","userList","JSON","parse","localStorage","getItem","action","draft","type","user","payload","alreadyExists","forEach","el","email","alert","push","setItem","stringify","newList"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,OAAO,IAAMC,YAAY,GAAG,CAC1BC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,IAA/C;AAAZ,CADkB,EAE1BC,MAF0B,KAI1BR,OAAO,CAACE,KAAD,EAASO,KAAD,IAAW;AACxB,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKZ,WAAL;AAAkB;AAAA,YACRa,IADQ,GACCH,MAAM,CAACI,OADR,CACRD,IADQ;AAEhB,YAAIE,aAAa,GAAG,KAApB;AACAJ,QAAAA,KAAK,CAACN,QAAN,CAAeW,OAAf,CAAwBC,EAAD,IAAQ;AAC7B,cAAIA,EAAE,CAACC,KAAH,KAAaL,IAAI,CAACK,KAAtB,EAA6B;AAC3BH,YAAAA,aAAa,GAAG,IAAhB;AACAI,YAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;AACF,SALD;;AAMA,YAAI,CAACJ,aAAL,EAAoB;AAClBJ,UAAAA,KAAK,CAACN,QAAN,CAAee,IAAf,CAAoBP,IAApB;AACAL,UAAAA,YAAY,CAACa,OAAb,CAAqB,UAArB,EAAiCf,IAAI,CAACgB,SAAL,CAAeX,KAAK,CAACN,QAArB,CAAjC;AACD;;AACD,eAAOM,KAAP;AACD;;AAED,SAAKV,UAAL;AAAiB;AAAA,YACPsB,OADO,GACKb,MAAM,CAACI,OADZ,CACPS,OADO;AAEfZ,QAAAA,KAAK,CAACN,QAAN,GAAiBkB,OAAjB;AACA,eAAOZ,KAAP;AACD;;AACD;AACE,aAAOA,KAAP;AAvBJ;AAyBD,CA1BM,CAJF","sourcesContent":["import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\";\n\nexport const formReducers = (\n  state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n  action\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_TO_LIST: {\n        const { user } = action.payload;\n        let alreadyExists = false;\n        draft.userList.forEach((el) => {\n          if (el.email === user.email) {\n            alreadyExists = true;\n            alert(\"This email is already taken, please change\");\n          }\n        });\n        if (!alreadyExists) {\n          draft.userList.push(user);\n          localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n        }\n        return draft;\n      }\n\n      case CLEAR_LIST: {\n        const { newList } = action.payload;        \n        draft.userList = newList;\n        return draft;\n      }\n      default:\n        return draft;\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}