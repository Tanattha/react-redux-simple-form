{"ast":null,"code":"import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport store from \"../store\";\nvar userList = store.getState().form.userList;\nexport var addToList = user => {\n  var alreadyExists = false;\n  userList.forEach(el => {\n    if (el.email === user.email) {\n      alreadyExists = true;\n      alert(\"This email is already taken, please change\");\n    }\n  });\n\n  if (!alreadyExists) {\n    // userList.push({ ...user });\n    //localStorage.setItem(\"userList\", JSON.stringify(userList));\n    return {\n      type: ADD_TO_LIST,\n      payload: {\n        user\n      }\n    };\n  }\n\n  ;\n};\nexport var clearList = () => {\n  //const userList = [];\n  //console.log(userList)\n  // localStorage.setItem(\"userList\", JSON.stringify(userList));\n  // localstorage.clear(\"userList\");\n  return {\n    type: CLEAR_LIST,\n    payload: {\n      userList\n    }\n  };\n};","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/actions/formActions.js"],"names":["ADD_TO_LIST","CLEAR_LIST","store","userList","getState","form","addToList","user","alreadyExists","forEach","el","email","alert","type","payload","clearList"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,QAAN,GAAiBC,IAAjB,CAAsBF,QAAvC;AACA,OAAO,IAAMG,SAAS,GAAIC,IAAD,IAAU;AAEjC,MAAIC,aAAa,GAAG,KAApB;AACAL,EAAAA,QAAQ,CAACM,OAAT,CAAkBC,EAAD,IAAQ;AACvB,QAAIA,EAAE,CAACC,KAAH,KAAaJ,IAAI,CAACI,KAAtB,EAA6B;AAC3BH,MAAAA,aAAa,GAAG,IAAhB;AACAI,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;AACF,GALD;;AAME,MAAI,CAACJ,aAAL,EAAoB;AACrB;AACC;AAEF,WAAO;AACLK,MAAAA,IAAI,EAAEb,WADD;AAELc,MAAAA,OAAO,EAAE;AAAEP,QAAAA;AAAF;AAFJ,KAAP;AAGE;;AAAA;AACH,CAjBM;AAmBP,OAAO,IAAMQ,SAAS,GAAG,MAAM;AAE7B;AACA;AACD;AACA;AACC,SAAO;AACLF,IAAAA,IAAI,EAAEZ,UADD;AAELa,IAAAA,OAAO,EAAE;AAAEX,MAAAA;AAAF;AAFJ,GAAP;AAID,CAVM","sourcesContent":["import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport store from \"../store\";\nconst userList = store.getState().form.userList;\nexport const addToList = (user) => {\n  \n  let alreadyExists = false;\n  userList.forEach((el) => {\n    if (el.email === user.email) {\n      alreadyExists = true;\n      alert(\"This email is already taken, please change\");\n    }\n  });\n    if (!alreadyExists) {\n   // userList.push({ ...user });\n    //localStorage.setItem(\"userList\", JSON.stringify(userList));\n    \n  return {\n    type: ADD_TO_LIST,\n    payload: { user },\n  }};\n};\n\nexport const clearList = () => {\n  \n  //const userList = [];\n  //console.log(userList)\n // localStorage.setItem(\"userList\", JSON.stringify(userList));\n // localstorage.clear(\"userList\");\n  return {\n    type: CLEAR_LIST,\n    payload: { userList },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}