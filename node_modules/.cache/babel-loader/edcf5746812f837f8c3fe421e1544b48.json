{"ast":null,"code":"import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\"; // export const formReducers = (\n//   state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n//   action\n// ) => {\n//   switch (action.type) {\n//     case ADD_TO_LIST:\n//       return { userList: action.payload.userList };\n//     case CLEAR_LIST:\n//       return { userList: action.payload.userList};\n//     default:\n//       return state;\n//   }\n// };\n\nexport var formReducers = (state = {\n  userList: JSON.parse(localStorage.getItem(\"userList\"))\n}, action) => produce(state, draft => {\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case ADD_TO_LIST:\n      {\n        var user = payload.user;\n\n        if (draft.userList.email === payload.email) {\n          alert(\"This email is already taken, please change\");\n        } else {\n          draft.userList.push(user);\n          localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n        }\n\n        return draft;\n      }\n\n    case CLEAR_LIST:\n      {\n        console.log(payload); // localStorage.setItem(\"userList\", JSON.stringify(payload));\n\n        return draft = payload;\n      }\n\n    default:\n      return draft;\n  }\n});","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/reducers/formReducer.js"],"names":["ADD_TO_LIST","CLEAR_LIST","produce","formReducers","state","userList","JSON","parse","localStorage","getItem","action","draft","type","payload","user","email","alert","push","setItem","stringify","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,OAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAG,CAC1BC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAAZ,CADkB,EAE1BC,MAF0B,KAI1BR,OAAO,CAACE,KAAD,EAASO,KAAD,IAAW;AAAA,MAChBC,IADgB,GACEF,MADF,CAChBE,IADgB;AAAA,MACVC,OADU,GACEH,MADF,CACVG,OADU;;AAExB,UAAQD,IAAR;AACE,SAAKZ,WAAL;AAAkB;AAAA,YACRc,IADQ,GACCD,OADD,CACRC,IADQ;;AAEhB,YAAIH,KAAK,CAACN,QAAN,CAAeU,KAAf,KAAyBF,OAAO,CAACE,KAArC,EAA4C;AAC1CC,UAAAA,KAAK,CAAC,4CAAD,CAAL;AACD,SAFD,MAEO;AACLL,UAAAA,KAAK,CAACN,QAAN,CAAeY,IAAf,CAAoBH,IAApB;AACAN,UAAAA,YAAY,CAACU,OAAb,CAAqB,UAArB,EAAiCZ,IAAI,CAACa,SAAL,CAAeR,KAAK,CAACN,QAArB,CAAjC;AACD;;AACD,eAAOM,KAAP;AACD;;AACD,SAAKV,UAAL;AAAiB;AACfmB,QAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EADe,CAEhB;;AACC,eAAOF,KAAK,GAAGE,OAAf;AACD;;AACD;AACE,aAAOF,KAAP;AAjBJ;AAmBD,CArBM,CAJF","sourcesContent":["import { ADD_TO_LIST, CLEAR_LIST } from \"../actions/types\";\nimport produce from \"immer\";\n\n// export const formReducers = (\n//   state = { userList: JSON.parse(localStorage.getItem(\"userList\") || \"[]\") },\n//   action\n// ) => {\n//   switch (action.type) {\n//     case ADD_TO_LIST:\n//       return { userList: action.payload.userList };\n//     case CLEAR_LIST:\n//       return { userList: action.payload.userList};\n//     default:\n//       return state;\n//   }\n// };\n\nexport const formReducers = (\n  state = { userList: JSON.parse(localStorage.getItem(\"userList\")) },\n  action\n) =>\n  produce(state, (draft) => {\n    const { type, payload } = action;\n    switch (type) {\n      case ADD_TO_LIST: {\n        const { user } = payload;\n        if (draft.userList.email === payload.email) {\n          alert(\"This email is already taken, please change\");\n        } else {\n          draft.userList.push(user);\n          localStorage.setItem(\"userList\", JSON.stringify(draft.userList));\n        }\n        return draft;\n      }\n      case CLEAR_LIST: {\n        console.log(payload)\n       // localStorage.setItem(\"userList\", JSON.stringify(payload));\n        return draft = payload;\n      }\n      default:\n        return draft;\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}