{"ast":null,"code":"import _slicedToArray from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Tanattha/Downloads/1psge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Tanattha/Downloads/1psge/src/Exercise.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form } from \"react-final-form\";\nimport { TextField } from \"@material-ui/core\";\nimport composeValidators from \"./composeValidators\";\nimport { useDispatch } from \"react-redux\";\nimport { addToList, clearList } from \"./actions/formActions\";\nimport store from \"./store\";\n\nfunction Exercise() {\n  var dispatch = useDispatch();\n\n  var handleSubmit = () => {\n    var user = {\n      name: name,\n      email: email\n    };\n    dispatch(addToList(user));\n    setName(\"\");\n    setEmail(\"\");\n  }; // const removeList = (e) => {\n  //   e.preventDefault();\n  //   const userList = store.getState().form.userList;\n  //   dispatch(clearList(userList))\n  // }\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return sleep(300);\n\n            case 2:\n              window.alert(JSON.stringify(values, 0, 2));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var userList = store.getState().form.userList;\n\n  var required = value => value ? undefined : \"Required\";\n\n  var mustBeEmail = value => isNaN(value) ? \"Invalid Email\" : undefined;\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    onSubmit: handleSubmit,\n    render: ({\n      form,\n      handleSubmit,\n      meta,\n      values\n    }) => {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        title: \"Form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"test\"), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"firstName\",\n        validate: required,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, ({\n        input,\n        meta\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        type: \"text\",\n        placeholder: \"First Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }\n      })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, meta.error))), /*#__PURE__*/React.createElement(TextField, {\n        id: \"outlined-basic\",\n        value: name,\n        label: \"Name\",\n        onChange: e => setName(e.target.value),\n        name: \"name\",\n        type: \"text\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"outlined-basic\",\n        value: email,\n        label: \"Email\",\n        onChange: e => setEmail(e.target.value),\n        name: \"email\",\n        type: \"email\",\n        required: \"true\",\n        variant: \"outlined\",\n        validate: composeValidators(required),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Submit\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Submitted Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, userList.map((obj, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"Full Name: \", obj.name)), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, \"Email: \", obj.email))))))));\n}\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/Tanattha/Downloads/1psge/src/Exercise.js"],"names":["React","Card","CardHeader","CardContent","CardActions","Grid","Typography","Button","Form","TextField","composeValidators","useDispatch","addToList","clearList","store","Exercise","dispatch","handleSubmit","user","name","email","setName","setEmail","onSubmit","values","sleep","window","alert","JSON","stringify","useState","userList","getState","form","required","value","undefined","mustBeEmail","isNaN","meta","input","error","touched","e","target","map","obj","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form } from \"react-final-form\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport composeValidators from \"./composeValidators\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToList, clearList } from \"./actions/formActions\";\r\nimport store from \"./store\";\r\nfunction Exercise() {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = () => {\r\n    const user = {\r\n      name: name,\r\n      email: email,\r\n    };\r\n    dispatch(addToList(user));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  // const removeList = (e) => {\r\n  //   e.preventDefault();\r\n  //   const userList = store.getState().form.userList;\r\n  //   dispatch(clearList(userList))\r\n  // }\r\n\r\n  const onSubmit = async values => {\r\n    await sleep(300)\r\n    window.alert(JSON.stringify(values, 0, 2))\r\n  }\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const userList = store.getState().form.userList;\r\n  const required = (value) => (value ? undefined : \"Required\");\r\n  const mustBeEmail = (value) => (isNaN(value) ? \"Invalid Email\" : undefined);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={6}>\r\n        <Form\r\n          onSubmit={onSubmit}\r\n          onSubmit={handleSubmit}\r\n          render={({ form, handleSubmit, meta, values }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit} noValidate>\r\n                <Card>\r\n                  <CardHeader title=\"Form\" />\r\n                  <CardContent>test</CardContent>\r\n                  <CardActions>\r\n                    <TextField name=\"firstName\" validate={required}>\r\n                      {({ input, meta }) => (\r\n                        <div>\r\n                          <label>First Name</label>\r\n                          <input\r\n                            {...input}\r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                          />\r\n                          {meta.error && meta.touched && (\r\n                            <span>{meta.error}</span>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </TextField>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      value={name}\r\n                      label=\"Name\"\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      value={email}\r\n                      label=\"Email\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      required=\"true\"\r\n                      variant=\"outlined\"\r\n                      validate={composeValidators(required)}\r\n                    />\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Card>\r\n          <CardHeader title=\"Submitted Form\" />\r\n\r\n          <CardContent>\r\n            {userList.map((obj, index) => (\r\n              <div key={index}>\r\n                <br />\r\n                <Typography>\r\n                  <strong>Full Name: {obj.name}</strong>\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Email: {obj.email}</strong>\r\n                </Typography>\r\n              </div>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Exercise;\r\n"]},"metadata":{},"sourceType":"module"}